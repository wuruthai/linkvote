@import "variables";


$space-list: ("sm" $space-sm), ("md" $space-md), ("lg" $space-lg);
$font-size-list: ("sm" $font-size-sm), ("md" $font-size-md), ("lg" $font-size-lg), ("xl" $font-size-xl), ("xxl" $font-size-xxl);
$font-weight-list: ("normal" $font-weight-normal), ("bold" $font-weight-bold);
$sides: (top, bottom, center, left, right);
$color-list: ("primary" $color-primary), ("light" $color-light), ("secondary" $color-secondary), ("warning" $color-warning), ("success" $color-success);

$flex-direction-list: row, row-reserve, column, column-reserve;
$flex-justify-list:  ("start" flex-start),("center" center), ("end" flex-end), ("around" space-around), ("between" space-between), ("evenly" space-evenly);
$flex-align-list:  ("top" flex-start), ("bottom" flex-end), ("middle" center);

// create basic css classes for margin-padding
// example usage margin-bottom-sm or padding-top-lg or padding-md
@each $space in $space-list {
  $key: nth($space, 1);
  $value: nth($space, 2);
  
  .margin-#{$key} {
    margin: $value;
  }
  .padding-#{$key} {
    padding: $value;
  }

  @each $side in $sides {
    @if side != "center" {
      .margin-#{$side}-#{$key} {
        margin-#{$side}: $value;
      }
    
      .p-#{$side}-#{$key} {
        padding-#{$side}: $value;
      }
    
    }
  }
}
@each $side in $sides {
  .text-align-#{$side} {
    text-align: $side;
  }  
}
@each $color in $color-list {
  $key: nth($color, 1);
  $value: nth($color, 2);

  .color-#{$key} {
    color: $value;
  }

  .background-color-#{$key} {
    color: $value;
  }
}
@each $size in $font-size-list {
  $key: nth($size, 1);
  $value: nth($size, 2);

  .font-size-#{$key} {
    font-size: $value;
  }
}
@each $weight in $font-weight-list {
  $key: nth($weight, 1);
  $value: nth($weight, 2);

  .font-weight-#{$key} {
    font-weight: $value;
  }
}

@each $direction in $flex-direction-list {

  .flex-#{$direction} {
    display: flex;
    flex-direction: $direction;
  }

  @each $justify in $flex-justify-list {
    $justifyKey: nth($justify, 1);
    $justifyVal: nth($justify, 2);
  
    .flex-#{$direction}-#{$justifyKey} {
      display: flex;
      flex-direction: $direction;
      justify-content: $justifyVal;
    }

    @each $align in $flex-align-list {
      $alignKey: nth($align, 1);
      $alignVal: nth($align, 2);
    
      .flex-#{$direction}-#{$justifyKey}-#{$alignKey} {
        display: flex;
        flex-direction: $direction;
        justify-content: $justifyVal;
        align-items: $alignVal;
      }
    }
  }
}
